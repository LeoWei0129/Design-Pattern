設計模式(Design Pattern)

使用設計模式的層次
1. 第一層: 剛開始學編程不久，聽說過甚麼是設計模式
2. 第二層: 有很長時間的編程經驗，自己寫了很多代碼，其中用到了設計模式，但自己不知道
3. 第三層: 學習過了設計模式，發現自己已經在使用了，並且發現了一些新的模式挺好用的
4. 第四層: 閱讀了很多別人寫的源碼和框架，在其中看到別人的設計模式，並且能夠領會設計模式的精妙和帶來的好處
5. 第五層: 代碼寫著寫著，自己都沒有意識到用了設計模式，並且熟練地寫了出來

基本介紹
1. 設計模式是工程師在面對同類軟體工程設計問題所總結出來的有用的經驗、模式、思想，不是代碼，是某類問題的通用
   解決方案，設計模式代表了最佳實踐，這些解決方案是眾多軟體開發人員經過相當長一段時間的試驗和錯誤總結出來的
2. 設計模式的本質提高了軟體的維護性、通用性和擴展性，並降低軟體的複雜度
3. 設計模式不局限於某種語言，Java、PHP、C++都有

設計模式分為3種類型、共23種
1. 創建型模式: 單例模式*、抽象工廠模式*、建造者模式、工廠模式*、原型模式
2. 結構型模式: 適配器模式、橋接模式、裝飾模式*、組合模式、外觀模式、享元模式、代理模式*
3. 行為型模式: 模板方法模式、命令模式、迭代器模式、觀察者模式*、中介者模式、備忘錄模式、解釋器模式(Interpreter模式)、
   狀態模式、策略模式、職責鏈模式(責任鏈模式)、訪問者模式