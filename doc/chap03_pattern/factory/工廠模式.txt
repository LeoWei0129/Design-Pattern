簡單工廠模式(Simple Factory)

基本介紹(simplefactory.png)
1. 簡單工廠模式屬於創建型模式，是工廠模式的一種，簡單工廠模式是由一個工廠對象決定要創建出哪一種產品類的實例，簡單工廠模式是工廠模式家
   族中最簡單也最實用的一種
2. 簡單工廠模式: 定義了一個創建對象的類，由這個類來封裝實例化對象的行為(代碼)
3. 在軟件開發中，當我們會用到大量創建某種、某類、某批對象時，就會使用工廠模式
-------------------------------------------------
工廠方法模式(Factory Method)

看一個新的需求
披薩項目的新需求: 客戶在點披薩時，可以點不同口味的披薩，比如北京的奶酪披薩、北京的胡椒披薩、倫敦的奶酪披薩、倫敦的胡椒披薩

思路1
使用簡單工廠模式，創建不同的簡單工廠類，比如BJSimpleFactory、LDSimpleFactory等等，從當前這個案例來說，是可以的，但考慮到項目的規模，
以及軟件的可維護性、可擴展性，此思路不是特別好

思路2
採用工廠方法模式: 將披薩項目的實例化功能抽象成抽象方法，在不同的子類中實現具體方法

基本介紹
定義了一個創建對象的抽象方法，由子類決定要實例化的類，工廠方法模式將對象的實例化推遲到子類
-------------------------------------------------
抽象工廠模式(Abstract Factory)

基本介紹
1. 定義了一個interface用於創建相關或有依賴關係的對象簇(一個工廠接口與依賴與這個接口的工廠子類)，而無須指名具體的類
2. 抽象工廠模式可以將簡單工廠模式和工廠方法模式進行整合
3. 從設計層面看，抽象工廠模式就是對簡單工廠模式的改進(或稱作進一步的抽象)
4. 將工廠抽象成兩層，AbsFactory(抽象工廠)和具體實現的工廠子類，程序員可以根據要創建的對象類型(此對象在工廠子類被實例化，每個工廠子類
   根據各自的需求選擇要創建那些對象)使用對應的工廠子類，這樣將單個的簡單工廠類變成了工廠簇，更利於代碼的維護和擴展

小結
1. 工廠模式的意義: 將實例化對象的代碼提取出來，放到一個類中統一管理和維護，達到和主項目的依賴關係和解偶，從而提高項目的擴展和維護性
2. 設計模式的依賴抽象原則
   => 創建對象實例時，不要直接new對象，而是把這個new對象的動作放在一個工廠的方法中，並返回，有的書上說，變量不要直接持有具體類的引用
   => 不要讓類繼承具體類，而是繼承抽象類或是實現接口
   => 不要覆蓋基類中已實現的方法